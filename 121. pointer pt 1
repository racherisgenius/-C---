1. 指针
- 是一个地址，也就是一个内存单元的编号。
   *内存单元的编号：就是汇编里面的那个内存地址的概念
- 而指针就是地址

ex：
# include <stdio.h>
int main(void)
{
  int * p; //p是变量的名字， int * 是p变量存放的是int 类型变量的地址
  //注意！！！！ int *是这个的数据类型。 
  //也就是说p只能放整形变量的地址
  /*
  int * p 不表示一个叫*p的变量。
  int * p 这里的p是这个变量的名字，而这个变量是一个可以存放整型数据地址的类型。
  */
  /*
  所以p = i 是不对的 因为i是是个变量不是一个地址。所以我们需要取i地址的&，来取i的地址
  所以要这么写：
  p = &i;
  */
  int i = 3;
  p = &i;
  /*
    1. p保存了i的地址，因此p指向i；
    -即通过p可以找到i
    指针 = 地址
    2. p不是i，i也不是p
    - 修改p的值不影响i的值，修改了i的值也不影响p的值 //所以相当于建立了一个副本
    - 所以以上两个都是两个变量 （只是指针变量）
       *指针变量：可以存放别的变量地址的变量
     3. 如果一个指针变变量指向了某普通变量。
     - 则 *指针变量完全等同于普通变量
     例子： 
          如果p是个指针变量，并且p存放了普通变量i的地址
          则p指向普通变量i；
          *p 也就完全等同于 i
          或者说：所有*p都是 i/所有i的都是*p
    
  */
  return 0;
}

/*
指针和指针变量的区别：
1. 指针是一个地址/一个编号
2. 指针变量是存放地址的变量
* 通常叙述是会把指针变量简称指针，但他们的实际含义是不一样的
*/
