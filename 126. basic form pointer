**指针常见问题1**
    // *p是以p的内容为地址的变量；
    //所以*p = i 是有问题的，因为p本来就是会存在垃圾值的（因为p没有做任何分配）
    //那么这个*p就表示以p为垃圾值的变量，但是你不可以用一个自己使用的i修改不属于你自己的p变量
    # include <stdio.h>
    int main(void)
    {
    //这个程序表示你只能用i和p这两个空间。
      int * p; //这里的p是随机分配的垃圾值，不管是什么，反正一定是二进制代码
      int i = 5;
      *p = i; //这里是不能这么赋值的，不然会出错。
      //你需要这么写：p = &i; 
      printf("%d\n",*p);
      return 0;
    }
    /*
      *p == 以p为内容地址的变量
    */

**指针常见错误2**
  # include <stdio.h>
  int main(void)
  {
      int i = 5;
      int * p;
      int * q;
  
      p = &i;
      *q = p; //这个错误是个刚刚一样的, 而且*q存的是一个int而不是一个地址。
      //所以这里会报错而第一个不会报错
      //: cannot convert from 'int *' to 'int'
      //要改成这样：q = p；（但是要注意在这里q是垃圾值，q付给p的话，p也会变成垃圾值）
      //           *q = p;
      
      //或者这样：  *p = i;
      //           *q = *p;
      printf("%d\n", *q); //如果你没有给*q一个值的话，那么*q里面还是垃圾值因为*q代表的内存单元的控制权并没有给本程序
      return 0;
   }
**指针的问题**
1. 内存泄漏
2. 野指针的问题
  ex：while p q r都pointing at A
    free(p) 表示把p指向的空间释放，而你用好free(p)；还用free(q);就不对了，因为没东西给你free了
  同样的，如果你不free，那么你的内存也会爆炸
